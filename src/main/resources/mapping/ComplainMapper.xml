<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.taofeng.webcast.dao.mapper.ComplainMapper" >
  <resultMap id="BaseResultMap" type="com.taofeng.webcast.dao.domain.ComplainDO" >
    <id column="complain_id" property="complainId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="person_by_reported_id" property="personByReportedId" jdbcType="BIGINT" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    complain_id, user_id, person_by_reported_id, reason, status, gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from web_complain
    where complain_id = #{complainId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from web_complain
    where complain_id = #{complainId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.taofeng.webcast.dao.domain.ComplainDO" >
    insert into web_complain (complain_id, user_id, person_by_reported_id, 
      reason, status, gmt_create, 
      gmt_modified)
    values (#{complainId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{personByReportedId,jdbcType=BIGINT}, 
      #{reason,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.taofeng.webcast.dao.domain.ComplainDO" >
    insert into web_complain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="complainId != null" >
        complain_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="personByReportedId != null" >
        person_by_reported_id,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="complainId != null" >
        #{complainId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="personByReportedId != null" >
        #{personByReportedId,jdbcType=BIGINT},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.taofeng.webcast.dao.domain.ComplainDO" >
    update web_complain
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="personByReportedId != null" >
        person_by_reported_id = #{personByReportedId,jdbcType=BIGINT},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where complain_id = #{complainId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taofeng.webcast.dao.domain.ComplainDO" >
    update web_complain
    set user_id = #{userId,jdbcType=BIGINT},
      person_by_reported_id = #{personByReportedId,jdbcType=BIGINT},
      reason = #{reason,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where complain_id = #{complainId,jdbcType=BIGINT}
  </update>
</mapper>